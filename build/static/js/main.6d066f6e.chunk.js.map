{"version":3,"sources":["reducers/searchReducer.js","components/Search.js","services/baseball.js","reducers/baseballReducer.js","reducers/entryReducer.js","components/CardPageSizeSelect.js","components/Footer.js","reducers/queryReducer.js","components/Tabs.js","services/user.js","services/login.js","reducers/loginReducer.js","reducers/userReducer.js","components/Cards.js","components/Notification.js","reducers/favoriteReducer.js","services/dataUpdate.js","reducers/updateReducer.js","reducers/notificationReducer.js","components/Favorites.js","components/MenuNav.js","hooks/index.js","components/Login.js","components/NewUser.js","App.js","reducers/pageReducer.js","reducers/pageOutputReducer.js","store.js","index.js"],"names":["searchChange","search","type","searchReducer","state","action","connect","filter","baseball","clearSearch","props","style","marginBottom","Input","icon","placeholder","onChange","event","target","value","toLowerCase","axios","get","then","response","data","query","page","entries","request","console","log","fetchData","dispatch","a","baseballService","queryBaseball","JSON","parse","pageOutput","baseballReducer","entryReducer","limitOptions","key","text","mapDispatchToProps","entriesChange","Fragment","Dropdown","inline","options","defaultValue","Footer","Segment","Container","textAlign","to","Image","centered","size","src","process","List","horizontal","divided","link","Item","as","href","queryReducer","queryChange","handleQuery","panes","menuItem","render","Tab","Pane","Button","className","color","onClick","defaultActiveIndex","token","getAll","getFavorites","id","create","newObject","config","headers","Authorization","post","update","card","put","removeFav","setToken","newToken","login","credentials","initState","localStorage","firstName","favorites","username","loginService","password","user","window","setItem","stringify","logout","removeItem","loginReducer","userService","userReducer","userToChange","favoritesToUpdate","changedUserFavorites","concat","userToRemoveFav","removeObject","moment","require","format","searchCards","title","includes","borderRadius","padding","addFavorite","loggedUser","cardsToShow","useEffect","setData","useState","column","setColumn","direction","setDirection","setFavorite","filteredData","handleSort","clickedColumn","_","sortBy","reverse","parseInt","history","useHistory","push","totalEntries","Table","sortable","celled","fixed","striped","Header","Row","HeaderCell","sorted","width","Body","map","Popup","trigger","Cell","itemURL","content","alt","image","position","bidCount","watchCount","price","timeLeft","fromNow","acceptsOffers","Icon","name","listingType","colSpan","Pagination","activePage","pageNumber","totalPages","Math","floor","onPageChange","e","pageInfo","notification","Message","favoriteReducer","item","baseUrl","length","ids","requests","currentBatch","splice","Promise","all","final","finalData","dataArray","arrayData","Array","prototype","getMultiple","updateReducer","setNotification","seconds","setTimeout","notificationReducer","favUpdates","toString","removeFavorite","getUpdates","dataService","updates","mapFAVS","formatFavs","from","join","inverted","height","updatedBids","updatedPrice","duration","humanize","status","Menu","header","undefined","MenuItem","useField","setValue","reset","omitreset","Login","withRouter","handleLogin","preventDefault","Grid","columns","Column","Form","onSubmit","fluid","iconPosition","createUser","newUser","CreateUser","newFirstName","newEmail","newUserName","newPassword","addUser","userObject","email","loginUser","error","padded","Field","label","initializeBaseball","baseballCards","fetchUser","userStr","getItem","setUser","loadBaseball","loggedUserJSON","exact","path","pageReducer","initialState","entriesPerPage","pageOutputReducer","reducer","combineReducers","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.6d066f6e.chunk.js","sourcesContent":["export const searchChange = search => {\r\n  return {\r\n    type: \"SET_SEARCH\",\r\n    search\r\n  };\r\n};\r\n\r\nexport const clearSearch = search => {\r\n  return {\r\n    type: \"RESET_SEARCH\",\r\n    search\r\n  };\r\n};\r\n\r\nconst searchReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH\":\r\n      return action.search;\r\n    case \"RESET_SEARCH\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport { searchChange, clearSearch } from \"../reducers/searchReducer\";\r\n\r\nconst Search = props => {\r\n  const handleSearch = event => {\r\n    props.searchChange(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const style = {\r\n    marginBottom: 10\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      <Input\r\n        icon=\"search\"\r\n        placeholder=\"Enter filter...\"\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search: state.search,\r\n    filter: state.filter,\r\n    baseball: state.baseball\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchChange,\r\n  //   filterChange,\r\n  clearSearch\r\n})(Search);\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/testAPI\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst getByQuery = (query, page, entries) => {\r\n  const request = axios.get(\r\n    baseUrl + `?keyword=${query}&page=${page}&entries=${entries}`\r\n    // baseUrl + `?keyword=${query}`\r\n  );\r\n  console.log(\r\n    \"URL\",\r\n    baseUrl + `?keyword=${query}&page=${page}&entries=${entries}`\r\n  );\r\n  console.log(\"Request\", request);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  getByQuery\r\n};\r\n","import baseballService from \"../services/baseball\";\r\n\r\nconst baseballReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data;\r\n    case \"UPDATE_DATA\":\r\n      return action.data;\r\n    case \"QUERY_DATA\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeBaseball = () => {\r\n  return async dispatch => {\r\n    const baseballCards = await baseballService.getAll();\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: JSON.parse(baseballCards.data)\r\n    });\r\n    dispatch({\r\n      type: \"GET_PAGE_OUTPUT\",\r\n      data: JSON.parse(baseballCards.pageOutput)\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchData = (query, page, entries) => {\r\n  return async dispatch => {\r\n    const queryBaseball = await baseballService.getByQuery(\r\n      query,\r\n      page,\r\n      entries\r\n    );\r\n    dispatch({\r\n      type: \"QUERY_DATA\",\r\n      data: JSON.parse(queryBaseball.data)\r\n    });\r\n    dispatch({\r\n      type: \"GET_PAGE_OUTPUT\",\r\n      data: JSON.parse(queryBaseball.pageOutput)\r\n    });\r\n  };\r\n};\r\n\r\nexport default baseballReducer;\r\n","export const entriesChange = entries => {\r\n  return {\r\n    type: \"SET_ENTRIES\",\r\n    entries\r\n  };\r\n};\r\n\r\nconst entryReducer = (state = \"10\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_ENTRIES\":\r\n      return action.entries;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default entryReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"../reducers/baseballReducer\";\r\nimport { entriesChange } from \"../reducers/entryReducer\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nconst limitOptions = [\r\n  { key: \"0\", value: \"10\", text: \"10\" },\r\n  { key: \"1\", value: \"25\", text: \"25\" },\r\n  { key: \"2\", value: \"50\", text: \"50\" },\r\n  { key: \"3\", value: \"100\", text: \"100\" }\r\n];\r\n\r\nconst CardPageSizeSelect = props => {\r\n  const onChangeEntries = (event, data) => {\r\n    props.entriesChange(data.value);\r\n    props.fetchData(props.query, props.page, data.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      Records per page:{\" \"}\r\n      <Dropdown\r\n        inline\r\n        options={limitOptions}\r\n        defaultValue={props.entries}\r\n        onChange={onChangeEntries}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    query: state.query,\r\n    entries: state.entries,\r\n    page: state.page\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  entriesChange,\r\n  fetchData\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPageSizeSelect);\r\n// export default Cards;\r\n","import React from \"react\";\r\nimport { Container, Image, Segment, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Segment>\r\n      <Container textAlign=\"center\">\r\n        <Link to=\"/\">\r\n          <Image\r\n            centered\r\n            size=\"medium\"\r\n            src={`${process.env.PUBLIC_URL}/assets/images/all-vintage-search-logo.png`}\r\n          />\r\n        </Link>\r\n        <List horizontal divided link size=\"small\">\r\n          <List.Item as=\"a\" href=\"#\">\r\n            About\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Contact Us\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Terms and Conditions\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Privacy Policy\r\n          </List.Item>\r\n        </List>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const queryChange = query => {\r\n  return {\r\n    type: \"SET_QUERY\",\r\n    query\r\n  };\r\n};\r\n\r\nconst queryReducer = (state = \"t206\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_QUERY\":\r\n      return action.query;\r\n    case \"RESET_QUERY\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default queryReducer;\r\n","import React from \"react\";\r\nimport { Tab, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"../reducers/baseballReducer\";\r\nimport { queryChange } from \"../reducers/queryReducer\";\r\nimport \"../index.css\";\r\n\r\nconst TabExampleBasic = props => {\r\n  const handleQuery = query => {\r\n    props.queryChange(query);\r\n    props.fetchData(query, props.page, props.entries);\r\n    console.log(\"Baseball\", props.baseball);\r\n  };\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: \"Early Tobacco (N)\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"oliveButton\"\r\n            color=\"olive\"\r\n            onClick={() => handleQuery(\"N28\")}\r\n            value=\"N28\"\r\n          >\r\n            N28\r\n          </Button>\r\n          <Button\r\n            className=\"oliveButton\"\r\n            color=\"olive\"\r\n            onClick={() => handleQuery(\"N29\")}\r\n            value=\"N29\"\r\n          >\r\n            N29\r\n          </Button>\r\n          <Button\r\n            className=\"oliveButton\"\r\n            color=\"olive\"\r\n            onClick={() => handleQuery(\"N162\")}\r\n            value=\"N162\"\r\n          >\r\n            N162\r\n          </Button>\r\n          <Button\r\n            className=\"oliveButton\"\r\n            color=\"olive\"\r\n            onClick={() => handleQuery(\"N172 old judge\")}\r\n            value=\"N172\"\r\n          >\r\n            N172\r\n          </Button>\r\n          <Button\r\n            className=\"oliveButton\"\r\n            color=\"olive\"\r\n            onClick={() => handleQuery(\"N309 Mayo\")}\r\n            value=\"N300\"\r\n          >\r\n            N300\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"Tobacco (T)\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t200\")}\r\n            value=\"t200\"\r\n          >\r\n            T200\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t201\")}\r\n            value=\"t201\"\r\n          >\r\n            T201\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t202\")}\r\n            value=\"t202\"\r\n          >\r\n            T202\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t204\")}\r\n            value=\"t204\"\r\n          >\r\n            T204\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t205\")}\r\n            value=\"t205\"\r\n          >\r\n            T205\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t206\")}\r\n            value=\"t206\"\r\n          >\r\n            T206\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t207\")}\r\n            value=\"t207\"\r\n          >\r\n            T207\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"t210\")}\r\n            value=\"t210\"\r\n          >\r\n            T210\r\n          </Button>\r\n          <Button\r\n            className=\"greenButton\"\r\n            color=\"green\"\r\n            onClick={() => handleQuery(\"T3 Turkey Red\")}\r\n            value=\"T3 Turkey Red\"\r\n          >\r\n            Turkey Reds\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"Strip Cards (W)\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w512\")}\r\n            value=\"w512\"\r\n          >\r\n            W512\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w514\")}\r\n            value=\"w514\"\r\n          >\r\n            W514\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w515\")}\r\n            value=\"w515\"\r\n          >\r\n            W515\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w516\")}\r\n            value=\"w516\"\r\n          >\r\n            W516\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w517\")}\r\n            value=\"w517\"\r\n          >\r\n            W517\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w520\")}\r\n            value=\"w520\"\r\n          >\r\n            W520\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w551\")}\r\n            value=\"w551\"\r\n          >\r\n            W551\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"w573\")}\r\n            value=\"w573\"\r\n          >\r\n            W573\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"Exhibit Cards (W)\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"1921 Exhibit\")}\r\n            value=\"1921 Exhibit\"\r\n          >\r\n            1921\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"1925 Exhibit\")}\r\n            value=\"1925 Exhibit\"\r\n          >\r\n            1925\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"1926 Exhibit\")}\r\n            value=\"1926 Exhibit\"\r\n          >\r\n            1926\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"1927 Exhibit\")}\r\n            value=\"1927 Exhibit\"\r\n          >\r\n            1927\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"4-in-1 exhibit\")}\r\n            value=\"1929-1938 W463 4-1\"\r\n          >\r\n            1929-1938 W463 4-1\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"salutation exhibit\")}\r\n            value=\"W462 Exhibit\"\r\n          >\r\n            1939-1946 (W462)\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"W461 Exhibit\")}\r\n            value=\"W461 Exhibit\"\r\n          >\r\n            1947-1966 (W461)\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n\r\n    {\r\n      menuItem: \"Early Candy Gum\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e90\")}\r\n            value=\"e90\"\r\n          >\r\n            E-90\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e91\")}\r\n            value=\"E-91\"\r\n          >\r\n            E91\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e92\")}\r\n            value=\"E-92\"\r\n          >\r\n            E92\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e93\")}\r\n            value=\"E93\"\r\n          >\r\n            E93\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e95\")}\r\n            value=\"E95\"\r\n          >\r\n            E95\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e96\")}\r\n            value=\"E96\"\r\n          >\r\n            E96\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e98\")}\r\n            value=\"E98\"\r\n          >\r\n            E98\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e106\")}\r\n            value=\"E106\"\r\n          >\r\n            E106\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e120\")}\r\n            value=\"E120\"\r\n          >\r\n            E120\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"e121\")}\r\n            value=\"E-93\"\r\n          >\r\n            E121\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"1914 Cracker Jack\")}\r\n            value=\"1914 Cracker Jack\"\r\n          >\r\n            1914 Cracker Jack\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"1915 Cracker Jack\")}\r\n            value=\"1915 Cracker Jack\"\r\n          >\r\n            1915 Cracker Jack\r\n          </Button>\r\n          <Button\r\n            className=\"blueButton\"\r\n            color=\"blue\"\r\n            onClick={() => handleQuery(\"1933 Goudey\")}\r\n            value=\"1933 Goudey\"\r\n          >\r\n            1933 Goudey\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"Early Bowman\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1948 Bowman\")}\r\n            value=\"1948 Bowman\"\r\n          >\r\n            1948\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1949 Bowman\")}\r\n            value=\"1949 Bowman\"\r\n          >\r\n            1949\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1950 Bowman\")}\r\n            value=\"1950 Bowman\"\r\n          >\r\n            1950\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1951 Bowman\")}\r\n            value=\"1951 Bowman\"\r\n          >\r\n            1951\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1952 Bowman\")}\r\n            value=\"1952 Bowman\"\r\n          >\r\n            1952\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1953 Bowman\")}\r\n            value=\"1953 Bowman\"\r\n          >\r\n            1953\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1954 Bowman\")}\r\n            value=\"1954 Bowman\"\r\n          >\r\n            1954\r\n          </Button>\r\n          <Button\r\n            className=\"brownButton\"\r\n            color=\"brown\"\r\n            onClick={() => handleQuery(\"1955 Bowman\")}\r\n            value=\"1955 Bowman\"\r\n          >\r\n            1955\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"Early Topps\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1952 Topps\")}\r\n            value=\"1952 Topps\"\r\n          >\r\n            1952\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1953 Topps\")}\r\n            value=\"1953 Topps\"\r\n          >\r\n            1953\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1954 Topps\")}\r\n            value=\"1954 Topps\"\r\n          >\r\n            1954\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1955 Topps\")}\r\n            value=\"1955 Topps\"\r\n          >\r\n            1955\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1956 Topps\")}\r\n            value=\"1956 Topps\"\r\n          >\r\n            1956\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1957 Topps\")}\r\n            value=\"1957 Topps\"\r\n          >\r\n            1957\r\n          </Button>\r\n          <Button\r\n            className=\"orangeButton\"\r\n            color=\"orange\"\r\n            onClick={() => handleQuery(\"1958 Topps\")}\r\n            value=\"1958 Topps\"\r\n          >\r\n            1958\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    },\r\n    {\r\n      menuItem: \"By Player\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Babe Ruth\")}\r\n            value=\"Babe Ruth\"\r\n          >\r\n            Babe Ruth\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Ty Cobb\")}\r\n            value=\"Ty Cobb\"\r\n          >\r\n            Ty Cobb\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Honus Wagner\")}\r\n            value=\"Honus Wagner\"\r\n          >\r\n            Honus Wagner\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Walter Johnson\")}\r\n            value=\"Walter Johnson\"\r\n          >\r\n            Walter Johnson\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Nap Lajoie\")}\r\n            value=\"Nap Lajoie\"\r\n          >\r\n            Nap Lajoie\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Christy Mathewson\")}\r\n            value=\"Christy Mathewson\"\r\n          >\r\n            Christy Mathewson\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Cy Young\")}\r\n            value=\"Cy Young\"\r\n          >\r\n            Cy Young\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Lou Gehrig\")}\r\n            value=\"Lou Gehrig\"\r\n          >\r\n            Lou Gehrig\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Shoeless Joe Jackson\")}\r\n            value=\"Shoeless Joe Jackson\"\r\n          >\r\n            Shoeless Joe Jackson\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Mickey Mantle\")}\r\n            value=\"Mickey Mantle\"\r\n          >\r\n            Mickey Mantle\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Jackie Robinson\")}\r\n            value=\"Jackie Robinson\"\r\n          >\r\n            Jackie Robinson\r\n          </Button>\r\n          <Button\r\n            className=\"blackButton\"\r\n            color=\"black\"\r\n            onClick={() => handleQuery(\"Ted Williams\")}\r\n            value=\"Ted Williams\"\r\n          >\r\n            Ted Williams\r\n          </Button>\r\n        </Tab.Pane>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return <Tab panes={panes} defaultActiveIndex={1} />;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    baseball: state.baseball,\r\n    entries: state.entries,\r\n    query: state.query,\r\n    page: state.page\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchData,\r\n  queryChange\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabExampleBasic);\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/user\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst getFavorites = id => {\r\n  const request = axios.get(`${baseUrl}/${id}/favorites`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\n// const remove = blog => {\r\n//   const config = {\r\n//     headers: { Authorization: token }\r\n//   };\r\n//   const request = axios.delete(`${baseUrl}/${blog.id}`, config);\r\n//   return request.then(response => response.data);\r\n// };\r\n\r\nconst update = async (id, card) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, card);\r\n  return response.data;\r\n};\r\n\r\nconst removeFav = async (id, card) => {\r\n  const response = await axios.put(`${baseUrl}/${id}/removefav`, card);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, getFavorites, create, update, removeFav, setToken };\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/login\";\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import loginService from \"../services/login\";\r\nimport userService from \"../services/user\";\r\n\r\nfunction initState() {\r\n  return {\r\n    token: localStorage.token,\r\n    firstName: localStorage.firstName,\r\n    id: localStorage.id,\r\n    favorites: localStorage.favorites,\r\n    username: localStorage.username\r\n  };\r\n}\r\n\r\nconst loginReducer = (state = initState(), action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      if (action.data) userService.setToken(action.data.token);\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchUser = () => {\r\n  return dispatch => {\r\n    const userStr = window.localStorage.getItem(\"loggedVintageUser\");\r\n    const user = JSON.parse(userStr);\r\n    if (user) {\r\n      dispatch({ type: \"SET_USER\", data: user });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setUser = data => {\r\n  return dispatch => {\r\n    dispatch({ type: \"SET_USER\", data });\r\n  };\r\n};\r\n\r\nexport const login = data => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username: data.username,\r\n      password: data.password\r\n    });\r\n    window.localStorage.setItem(\"loggedVintageUser\", JSON.stringify(user));\r\n    dispatch({ type: \"SET_USER\", data: user });\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem(\"loggedVintageUser\");\r\n    dispatch({ type: \"SET_USER\", data: initState() });\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","import userService from \"../services/user\";\r\nimport { login } from \"./loginReducer\";\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"NEW_USER\":\r\n      return [...state, action.data];\r\n    case \"ADD_FAVORITE\":\r\n      const userToChange = action.data.user;\r\n      console.log(\"USER\", userToChange);\r\n      let favoritesToUpdate = userToChange.favorites;\r\n      const changedUserFavorites = favoritesToUpdate.concat(action.data.card);\r\n      userToChange.favorites = changedUserFavorites;\r\n      userService.update(userToChange.id, action.data.card);\r\n      return action.data.user;\r\n    case \"REMOVE_FAVORITE\":\r\n      const userToRemoveFav = action.data.user;\r\n      userService.removeFav(userToRemoveFav.id, action.data.card);\r\n      return action.data.user;\r\n    case \"DELETE_USER\":\r\n      const removeObject = action.data;\r\n      return state.filter(user => user.id !== removeObject.id);\r\n    case \"INIT_USERS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll();\r\n    dispatch({\r\n      type: \"INIT_USERS\",\r\n      data: users\r\n    });\r\n  };\r\n};\r\n\r\nexport const addFavorite = (card, user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"ADD_FAVORITE\",\r\n      data: {\r\n        card: card,\r\n        user: user\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFavorite = (card, user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"REMOVE_FAVORITE\",\r\n      data: {\r\n        card: card,\r\n        user: user\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const createUser = content => {\r\n  return async dispatch => {\r\n    const newUser = await userService.create(content);\r\n    dispatch({\r\n      type: \"NEW_USER\",\r\n      data: newUser\r\n    });\r\n    login(newUser);\r\n  };\r\n};\r\n\r\nexport const removeUser = userToDelete => {\r\n  return async dispatch => {\r\n    await userService.remove(userToDelete);\r\n    dispatch({\r\n      type: \"DELETE_USER\",\r\n      data: userToDelete\r\n    });\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Search from \"./Search\";\r\nimport CardPageSizeSelect from \"./CardPageSizeSelect\";\r\nimport Footer from \"./Footer\";\r\nimport TabExampleBasic from \"./Tabs\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  Popup,\r\n  Icon,\r\n  Button,\r\n  Segment,\r\n  Pagination\r\n} from \"semantic-ui-react\";\r\nimport { searchChange } from \"../reducers/searchReducer\";\r\nimport { fetchData } from \"../reducers/baseballReducer\";\r\nimport { addFavorite } from \"../reducers/userReducer\";\r\nimport _ from \"lodash\";\r\nvar moment = require(\"moment\");\r\nmoment().format();\r\n\r\nconst searchCards = ({ baseball, search }) => {\r\n  return search\r\n    ? baseball.filter(a =>\r\n        a.title[0].toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    : baseball;\r\n};\r\n\r\nconst style = {\r\n  borderRadius: 0,\r\n  padding: \"2em\"\r\n};\r\n\r\nconst Cards = props => {\r\n  useEffect(() => {\r\n    setData(props.cardsToShow);\r\n  }, [props]);\r\n\r\n  console.log(\"Logged User\", props.loggedUser);\r\n\r\n  const [column, setColumn] = useState(null);\r\n  const [direction, setDirection] = useState(null);\r\n  const [favorites, setFavorite] = useState(\"\");\r\n  const [filteredData, setData] = useState(props.cardsToShow);\r\n\r\n  const handleSortNumeric = clickedColumn => {\r\n    const sorter = data => parseInt(data[clickedColumn]);\r\n    setData(_.sortBy(filteredData, sorter));\r\n  };\r\n\r\n  const handleSortReverse = () => {\r\n    const sorter = data => parseInt(data);\r\n    setData(_.sortBy(filteredData, sorter).reverse());\r\n  };\r\n\r\n  const handleSort = clickedColumn => {\r\n    if (column !== clickedColumn) {\r\n      setColumn(clickedColumn);\r\n      console.log(\"Column\", clickedColumn);\r\n      if (clickedColumn === \"title\" || \"acceptsOffers\" || \"timeStamp\") {\r\n        setData(_.sortBy(filteredData, [clickedColumn]));\r\n        console.log(\"Filtered Data\", filteredData);\r\n      } else {\r\n        handleSortNumeric(clickedColumn);\r\n      }\r\n      setDirection(\"ascending\");\r\n      console.log(\"Direction\", direction);\r\n      return;\r\n    }\r\n\r\n    if (clickedColumn === \"title\") {\r\n      setData(_.sortBy(filteredData.reverse()));\r\n    } else {\r\n      handleSortReverse();\r\n    }\r\n\r\n    direction === \"ascending\"\r\n      ? setDirection(\"descending\")\r\n      : setDirection(\"ascending\");\r\n  };\r\n\r\n  const handlePagination = (e, pageInfo) => {\r\n    props.fetchData(props.query, pageInfo.activePage, props.entries);\r\n  };\r\n\r\n  const removeFavorite = id => {\r\n    setFavorite(favorites.filter(card => card !== id));\r\n    console.log(\"FAVORITES AFTER REM\", favorites);\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const addFavorite = (card, user) => {\r\n    if (typeof user.id === \"undefined\") {\r\n      return history.push(\"/login\");\r\n    }\r\n    console.log(\"USER\", user);\r\n    console.log(\"FAVORITES\", favorites);\r\n    props.addFavorite(card, user);\r\n    if (favorites.includes(card.id)) {\r\n      removeFavorite(card.id);\r\n    } else {\r\n      setFavorite([...favorites, card.id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <TabExampleBasic />\r\n      <Segment>\r\n        <CardPageSizeSelect /> Total count: {props.pageOutput.totalEntries}\r\n      </Segment>\r\n      <Table sortable celled fixed striped>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell\r\n              sorted={column === \"title\" ? direction : null}\r\n              onClick={() => handleSort(\"title\")}\r\n            >\r\n              Card Title\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              width={2}\r\n              textAlign=\"center\"\r\n              sorted={column === \"bidCount\" ? direction : null}\r\n              onClick={() => handleSort(\"bidCount\")}\r\n            >\r\n              # Bids\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"watchCount\" ? direction : null}\r\n              onClick={() => handleSort(\"watchCount\")}\r\n            >\r\n              Watchers\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"price\" ? direction : null}\r\n              onClick={() => handleSort(\"price\")}\r\n            >\r\n              Price\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"timeStamp\" ? direction : null}\r\n              onClick={() => handleSort(\"timeStamp\")}\r\n            >\r\n              Time Left\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={column === \"acceptsOffers\" ? direction : null}\r\n              onClick={() => handleSort(\"acceptsOffers\")}\r\n              textAlign=\"center\"\r\n              width={2}\r\n            >\r\n              Auction Info\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\" width=\"2\">\r\n              Favorite\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {!filteredData\r\n            ? \"Sorry No Cards Found\"\r\n            : filteredData.map(card => (\r\n                <Table.Row>\r\n                  <Popup\r\n                    trigger={\r\n                      <Table.Cell>\r\n                        <a href={card.itemURL} target={\"_blank\"}>\r\n                          {card.title}\r\n                        </a>\r\n                      </Table.Cell>\r\n                    }\r\n                    content={<img alt={card.title} src={card.image}></img>}\r\n                    style={style}\r\n                    position=\"left center\"\r\n                  ></Popup>\r\n                  <Table.Cell textAlign=\"center\">{card.bidCount}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">{card.watchCount}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">${card.price}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    {moment(card.timeLeft).fromNow(true)}\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    {card.acceptsOffers[0] === \"true\" ? (\r\n                      <Popup\r\n                        content=\"Accepts Offers\"\r\n                        trigger={<Icon color=\"green\" name=\"check circle\" />}\r\n                      />\r\n                    ) : null}\r\n                    {card.listingType[0] === \"Auction\" ? (\r\n                      <Popup\r\n                        content=\"Auction\"\r\n                        trigger={<Icon color=\"blue\" name=\"gavel\" />}\r\n                      />\r\n                    ) : null}\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    <Button\r\n                      onClick={() => addFavorite(card, props.loggedUser)}\r\n                      color={\r\n                        favorites.includes(card.id) ? \"google plus\" : \"twitter\"\r\n                      }\r\n                      icon={\r\n                        favorites.includes(card.id) ? \"heart\" : \"heart outline\"\r\n                      }\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n        </Table.Body>\r\n        <Table.Footer>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"7\">\r\n              {/* {/* <Button onClick={() => handlePagination(props.query, 2, 25)}>\r\n                Go To Page 2\r\n              </Button> */}\r\n              <Pagination\r\n                activePage={props.pageOutput.pageNumber}\r\n                totalPages={Math.floor(\r\n                  props.pageOutput.totalEntries / props.entries\r\n                )}\r\n                onPageChange={handlePagination}\r\n              />\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    baseball: state.baseball,\r\n    loggedUser: state.loggedUser,\r\n    page: state.page,\r\n    entries: state.entries,\r\n    query: state.query,\r\n    pageOutput: state.pageOutput,\r\n    search: state.search,\r\n    cardsToShow: searchCards(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  searchChange,\r\n  fetchData,\r\n  addFavorite\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\r\n","import React from \"react\";\r\nimport { Container, Message } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Notification = props => {\r\n  const { notification } = props;\r\n\r\n  return (\r\n    notification && (\r\n      <Container>\r\n        <Message>{notification}</Message>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Notification);\r\n","import userService from \"../services/user\";\r\n\r\nconst favoriteReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"GET_FAVORITES\":\r\n      return action.data;\r\n    case \"REMOVE_FAVORITE\":\r\n      const userToRemoveFav = action.data.user;\r\n      console.log(\"Card\", action.data.card);\r\n      console.log(\"User\", action.data.user);\r\n      console.log(\r\n        \"State\",\r\n        state.filter(item => item.id !== action.data.card.id)\r\n      );\r\n      userService.removeFav(userToRemoveFav.id, action.data.card);\r\n      return state.filter(item => item.id[0] !== action.data.card.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getFavorites = id => {\r\n  return async dispatch => {\r\n    const favorites = await userService.getFavorites(id);\r\n    dispatch({\r\n      type: \"GET_FAVORITES\",\r\n      data: favorites\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFavorite = (card, user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"REMOVE_FAVORITE\",\r\n      data: {\r\n        card: card,\r\n        user: user\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport default favoriteReducer;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/getMultiple\";\r\n\r\nasync function getMultiple(query) {\r\n  if (query.length < 21) {\r\n    const request = axios.get(baseUrl + `?id=${query}`);\r\n    return request.then(response => response.data);\r\n  }\r\n\r\n  let ids = [...query];\r\n  console.log(\"IDS\", ids);\r\n  const batchSize = 20;\r\n  const requests = [];\r\n\r\n  while (ids.length) {\r\n    let currentBatch = ids.splice(0, batchSize);\r\n    console.log(\"Current batch\", currentBatch);\r\n    requests.push(axios.get(baseUrl + `?id=${currentBatch}`));\r\n  }\r\n\r\n  console.log(\"Requests\", requests);\r\n\r\n  const final = await Promise.all(requests);\r\n  const finalData = final.map(dataArray => dataArray.data);\r\n  const arrayData = Array.prototype.concat(...finalData);\r\n\r\n  return arrayData;\r\n}\r\n\r\nexport default {\r\n  getMultiple\r\n};\r\n","import dataService from \"../services/dataUpdate\";\r\n\r\nconst updateReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"GET_DATA\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUpdates = id => {\r\n  return async dispatch => {\r\n    const updates = await dataService.getMultiple(id);\r\n    dispatch({\r\n      type: \"GET_DATA\",\r\n      data: updates\r\n    });\r\n  };\r\n};\r\nexport default updateReducer;\r\n","const initialState = null;\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_NOTIFICATION\":\r\n      state = action.data;\r\n      return state;\r\n    case \"REMOVE_NOTIFICATION\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotification = (content, seconds) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SET_NOTIFICATION\",\r\n      data: content\r\n    });\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"REMOVE_NOTIFICATION\",\r\n        data: null\r\n      });\r\n    }, seconds * 1000);\r\n  };\r\n};\r\n\r\nexport const removeNotification = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"REMOVE_NOTIFICATION\",\r\n      notification: null\r\n    });\r\n  };\r\n};\r\n\r\nexport default notificationReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Search from \"./Search\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Popup, Icon, Button, Segment, Header } from \"semantic-ui-react\";\r\nimport { searchChange } from \"../reducers/searchReducer\";\r\nimport { fetchData } from \"../reducers/baseballReducer\";\r\nimport { removeFavorite } from \"../reducers/favoriteReducer\";\r\nimport { getFavorites } from \"../reducers/favoriteReducer\";\r\nimport { getUpdates } from \"../reducers/updateReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport _ from \"lodash\";\r\nvar moment = require(\"moment\");\r\nmoment().format();\r\n\r\n//Filter 'favupdates' state for user's input\r\nconst searchCards = ({ favUpdates, search }) => {\r\n  return search\r\n    ? favUpdates.filter(a =>\r\n        a.title\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(search.toLowerCase())\r\n      )\r\n    : favUpdates;\r\n};\r\n\r\nconst style = {\r\n  borderRadius: 0,\r\n  padding: \"2em\"\r\n};\r\n\r\nconst Favorites = props => {\r\n  //Loads User's Saved Favorites from Database into 'favorites' state\r\n  useEffect(() => {\r\n    props.getFavorites(props.loggedUser.id);\r\n  }, [props.loggedUser]);\r\n\r\n  //Set 'filteredData' state\r\n  useEffect(() => {\r\n    setData(props.cardsToShow);\r\n  }, [props]);\r\n\r\n  const mapFAVS = props.favorites;\r\n  const data = Array.from(mapFAVS);\r\n  const updatedFavs = data.map(item => item.id);\r\n  const formatFavs = updatedFavs.map(id => id.join(\",\"));\r\n  console.log(\"FORMAT FAVS\", formatFavs);\r\n\r\n  //Get updated data from eBay based on user's favorite id's and update 'favUpdates' state\r\n  useEffect(() => {\r\n    props.getUpdates(formatFavs);\r\n  }, [props.favorites]);\r\n\r\n  const [column, setColumn] = useState(null);\r\n  const [direction, setDirection] = useState(null);\r\n  const [filteredData, setData] = useState(props.cardsToShow);\r\n\r\n  console.log(\"Filtered Data\", filteredData);\r\n\r\n  const handleSortNumeric = clickedColumn => {\r\n    const sorter = data => parseInt(data[clickedColumn]);\r\n    setData(_.sortBy(filteredData, sorter));\r\n  };\r\n\r\n  const handleSortReverse = () => {\r\n    const sorter = data => parseInt(data);\r\n    setData(_.sortBy(filteredData, sorter).reverse());\r\n  };\r\n\r\n  const handleSort = clickedColumn => {\r\n    if (column !== clickedColumn) {\r\n      setColumn(clickedColumn);\r\n      if (clickedColumn === \"title\" || \"acceptsOffers\" || \"timeStamp\") {\r\n        setData(_.sortBy(filteredData, [clickedColumn]));\r\n      } else {\r\n        handleSortNumeric(clickedColumn);\r\n      }\r\n      setDirection(\"ascending\");\r\n      return;\r\n    }\r\n\r\n    if (clickedColumn === \"title\") {\r\n      setData(_.sortBy(filteredData.reverse()));\r\n    } else {\r\n      handleSortReverse();\r\n    }\r\n\r\n    direction === \"ascending\"\r\n      ? setDirection(\"descending\")\r\n      : setDirection(\"ascending\");\r\n  };\r\n\r\n  const removeFavorite = card => {\r\n    props.removeFavorite(card, props.loggedUser);\r\n    props.setNotification(`You removed ${card.title}!`, 5);\r\n  };\r\n\r\n  if (!props.cardsToShow) return null;\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <Segment inverted color=\"blue\">\r\n        <Header inverted color=\"grey\" size=\"medium\">\r\n          My Favorites\r\n        </Header>\r\n      </Segment>\r\n      <Segment>Count: {props.cardsToShow.length}</Segment>\r\n      <Table sortable celled fixed striped>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell\r\n              sorted={column === \"title\" ? direction : null}\r\n              onClick={() => handleSort(\"title\")}\r\n            >\r\n              Card Title\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              width={2}\r\n              textAlign=\"center\"\r\n              sorted={column === \"updatedBids\" ? direction : null}\r\n              onClick={() => handleSort(\"updatedBids\")}\r\n            >\r\n              # Bids\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"updatedPrice\" ? direction : null}\r\n              onClick={() => handleSort(\"updatedPrice\")}\r\n            >\r\n              Price\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"timeStamp\" ? direction : null}\r\n              onClick={() => handleSort(\"timeStamp\")}\r\n            >\r\n              Time Left\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              textAlign=\"center\"\r\n              sorted={column === \"status\" ? direction : null}\r\n              onClick={() => handleSort(\"status\")}\r\n            >\r\n              Status\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\" width={2}>\r\n              Remove\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {!filteredData\r\n            ? \"Sorry No Cards Found\"\r\n            : filteredData.map(card => (\r\n                <Table.Row key={card.id}>\r\n                  <Popup\r\n                    trigger={\r\n                      <Table.Cell>\r\n                        <a href={card.itemURL} target={\"_blank\"}>\r\n                          {card.title}\r\n                        </a>\r\n                      </Table.Cell>\r\n                    }\r\n                    content={\r\n                      <img alt={card.title} src={card.image} height=\"250\"></img>\r\n                    }\r\n                    style={style}\r\n                    size=\"small\"\r\n                    position=\"left center\"\r\n                  ></Popup>\r\n                  <Table.Cell textAlign=\"center\">{card.updatedBids}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    ${card.updatedPrice}\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    {moment.duration(card.timeLeft, \"minutes\").humanize()}\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">{card.status}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    <Button\r\n                      onClick={() => removeFavorite(card)}\r\n                      color=\"red\"\r\n                      icon=\"remove circle\"\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n        </Table.Body>\r\n        <Table.Footer>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"6\"></Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    baseball: state.baseball,\r\n    favorites: state.favorites,\r\n    favUpdates: state.favUpdates,\r\n    loggedUser: state.loggedUser,\r\n    page: state.page,\r\n    entries: state.entries,\r\n    query: state.query,\r\n    pageOutput: state.pageOutput,\r\n    search: state.search,\r\n    cardsToShow: searchCards(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  searchChange,\r\n  fetchData,\r\n  removeFavorite,\r\n  getFavorites,\r\n  getUpdates,\r\n  setNotification\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Header, Menu, Button, MenuItem } from \"semantic-ui-react\";\r\nimport { logout } from \"../reducers/loginReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MenuNav = props => {\r\n  const logout = () => {\r\n    props.logout();\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n\r\n  return (\r\n    <Menu>\r\n      <Container>\r\n        <Menu.Item header>\r\n          <Header as=\"h3\">\r\n            <Link to=\"/\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/all-vintage-search-logo.png`}\r\n                alt=\"All Vintage Search\"\r\n                height=\"60px\"\r\n              />\r\n            </Link>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          {props.loggedUser.id !== undefined ? (\r\n            <>\r\n              <Menu.Item link>\r\n                <Link to=\"/favorites\">My Favorites</Link>\r\n              </Menu.Item>\r\n              <Menu.Item link>\r\n                <span>\r\n                  <em>Hi {props.loggedUser.firstName} you're logged in!</em>{\" \"}\r\n                  <Button size=\"mini\" onClick={logout}>\r\n                    logout\r\n                  </Button>\r\n                </span>\r\n              </Menu.Item>\r\n            </>\r\n          ) : (\r\n            <MenuItem>\r\n              <Link to=\"/login\">login</Link>\r\n            </MenuItem>\r\n          )}\r\n        </Menu.Menu>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedUser: state.loggedUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuNav);\r\n","import { useState } from \"react\";\r\n\r\nexport const useField = type => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset,\r\n    omitreset: {\r\n      type,\r\n      value,\r\n      onChange\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { login } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport { useField } from \"../hooks\";\r\nimport { logout } from \"../reducers/loginReducer\";\r\n\r\nconst LoginForm = props => {\r\n  const username = useField(\"text\");\r\n  const password = useField(\"password\");\r\n\r\n  const logout = () => {\r\n    props.logout();\r\n  };\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = { username: username.value, password: password.value };\r\n      await props.login(user);\r\n      username.reset();\r\n      password.reset();\r\n      props.history.push(\"/\");\r\n    } catch (error) {\r\n      props.setNotification(\"Sorry wrong username or password.\", 5);\r\n    }\r\n  };\r\n\r\n  if (props.loggedUser.id !== undefined)\r\n    return (\r\n      <p>\r\n        You are currently logged in. Would you like to{\" \"}\r\n        <Link onClick={logout} to=\"/\">\r\n          logout?\r\n        </Link>\r\n      </p>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Grid centered columns={2}>\r\n        <Grid.Column>\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            <Segment>\r\n              <Link to=\"/\">\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/all-vintage-search-logo.png`}\r\n                  alt=\"All Vintage Search\"\r\n                  height=\"60px\"\r\n                />\r\n              </Link>\r\n            </Segment>\r\n          </Header>\r\n          <Segment>\r\n            <Form onSubmit={handleLogin} size=\"large\">\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                id=\"username\"\r\n                {...username.omitreset}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                {...password.omitreset}\r\n              />\r\n\r\n              <Button color=\"blue\" fluid size=\"large\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n          <Message>\r\n            Not registered yet? <Link to=\"/newuser\">Sign Up</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification,\r\n    loggedUser: state.loggedUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  setNotification,\r\n  logout\r\n};\r\n\r\nconst Login = withRouter(LoginForm);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createUser } from \"../reducers/userReducer\";\r\nimport Footer from \"./Footer\";\r\nimport MenuNav from \"./MenuNav\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport { Form, Segment } from \"semantic-ui-react\";\r\nimport { useField } from \"../hooks\";\r\n\r\nconst NewUser = props => {\r\n  const newFirstName = useField(\"text\");\r\n  const newEmail = useField(\"text\");\r\n  const newUserName = useField(\"text\");\r\n  const newPassword = useField(\"text\");\r\n\r\n  const addUser = async event => {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      const userObject = {\r\n        firstName: newFirstName.value,\r\n        email: newEmail.value,\r\n        username: newUserName.value,\r\n        password: newPassword.value\r\n      };\r\n\r\n      const loginUser = {\r\n        username: newUserName.value,\r\n        password: newPassword.value\r\n      };\r\n\r\n      await props.createUser(userObject);\r\n      await props.login(loginUser);\r\n      //   newName.reset();\r\n      //   newUserName.reset();\r\n      //   newPassword.reset();\r\n      props.history.push(\"/\");\r\n      props.setNotification(`You've added a new account!`, 4);\r\n    } catch (error) {\r\n      props.setNotification(\r\n        `Sorry can't create user.  Here's why: ` + error.response.data.error,\r\n        4\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuNav />\r\n      <Segment padded>\r\n        <h1>Create an All Vintage Search Account</h1>\r\n        <Form onSubmit={addUser}>\r\n          <Form.Field>\r\n            <Form.Input {...newFirstName} reset={null} label=\"First Name\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Input {...newEmail} reset={null} label=\"Email\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Input {...newUserName} reset={null} label=\"Username\" />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Input {...newPassword} reset={null} label=\"Password\" />\r\n          </Form.Field>\r\n          <Form.Button type=\"submit\">sign up</Form.Button>\r\n        </Form>\r\n      </Segment>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createUser,\r\n  login,\r\n  setNotification\r\n};\r\n\r\nconst CreateUser = withRouter(NewUser);\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateUser);\r\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport Cards from \"./components/Cards\";\nimport Notification from \"./components/Notification\";\nimport Favorites from \"./components/Favorites\";\nimport MenuNav from \"./components/MenuNav\";\nimport Login from \"./components/Login\";\nimport NewUser from \"./components/NewUser\";\nimport { initializeBaseball } from \"./reducers/baseballReducer\";\nimport { fetchUser, setUser } from \"./reducers/loginReducer\";\nimport userService from \"./services/user\";\n\n// const blogFormRef = React.createRef();\n\nconst App = props => {\n  const loadBaseball = props.initializeBaseball;\n\n  useEffect(() => {\n    loadBaseball();\n  }, [loadBaseball]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedVintageUser\");\n    console.log(\"LOGGED USER\", loggedUserJSON);\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      props.setUser(user);\n      userService.setToken(user.token);\n    }\n  }, []);\n\n  // const blogById = id => props.blogs.find(a => a.id === id);\n  // const userById = id => props.users.find(a => a.id === id);\n\n  return (\n    <Container>\n      <Notification />\n      <Router>\n        <Route exact path=\"/\">\n          <MenuNav />\n          <Cards />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/favorites\">\n          {props.loggedUser.id !== undefined ? (\n            <>\n              <MenuNav />\n              <Favorites />\n            </>\n          ) : (\n            <>\n              <MenuNav />\n              <Cards />\n            </>\n          )}\n        </Route>\n        <Route exact path=\"/newuser\">\n          <NewUser />\n        </Route>\n      </Router>\n      <div>\n        <br />\n        {/* <em>Blog app, Chris Stuart 2019</em> */}\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    baseball: state.baseball,\n    loggedUser: state.loggedUser\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeBaseball,\n  fetchUser,\n  setUser\n};\n\nApp.propTypes = {\n  baseball: PropTypes.array\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const pageReducer = (state = \"1\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_PAGE\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const setPage = page => {\r\n//   return async dispatch => {\r\n//     dispatch({\r\n//       type: \"SET_CURRENT_PAGE\",\r\n//       data: page\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport default pageReducer;\r\n","const initialState = {\r\n  entriesPerPage: 10,\r\n  pageNumber: 1,\r\n  totalPages: 1,\r\n  totalEntries: 10\r\n};\r\n\r\nconst pageOutputReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PAGE_OUTPUT\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pageOutputReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport baseballReducer from \"./reducers/baseballReducer\";\r\nimport searchReducer from \"./reducers/searchReducer\";\r\n// import filterReducer from \"./reducers/filterReducer\";\r\n// import columnReducer from \"./reducers/columnReducer\";\r\nimport pageReducer from \"./reducers/pageReducer\";\r\nimport pageOutputReducer from \"./reducers/pageOutputReducer\";\r\nimport entryReducer from \"./reducers/entryReducer\";\r\nimport queryReducer from \"./reducers/queryReducer\";\r\n// import directionReducer from \"./reducers/directionReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport notificationReducer from \"./reducers/notificationReducer\";\r\nimport favoriteReducer from \"./reducers/favoriteReducer\";\r\nimport updateReducer from \"./reducers/updateReducer\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst reducer = combineReducers({\r\n  baseball: baseballReducer,\r\n  entries: entryReducer,\r\n  page: pageReducer,\r\n  pageOutput: pageOutputReducer,\r\n  search: searchReducer,\r\n  query: queryReducer,\r\n  // filteredData: filterReducer,\r\n  // column: columnReducer,\r\n  // direction: directionReducer,\r\n  loggedUser: loginReducer,\r\n  users: userReducer,\r\n  notification: notificationReducer,\r\n  favorites: favoriteReducer,\r\n  favUpdates: updateReducer\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n"],"sourceRoot":""}